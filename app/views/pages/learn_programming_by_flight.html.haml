%h1 learn_programming_by_flight

%h6 Ingredients
%ul
  %li Foam glider, 22"
  %li 1000kv Rotor
  %li Propellers
  %li ESC speed controller
  %li Adafruit Trinket
  %li Scotch Tape

%p
  This activitie allows you to teach people about programming, even at a very young age. 

%p
  Buy a foam airplane glider (22" should do the trick).  Install a trinket, and rotor, ECS stuff so it can fly.  Then program the trinket to fly the plane for 1 second.  Then try throwing the plane.  If the plane crashes, make modifications to the wings with tape and stuff.  If it flies good, then have the learning programmer change the flight time in the function call that flies for x seconds.  

%p
  Then you can do refactors to the code.  

%h6 Code States
%ul
  %li
    %h6 Duration
  %li basic code that has no functions just something in the setup loop
  %li create a function that you call
  %li create TWO calls for that function, to double the time
  %li create a parameter that you pass into the function
  %li create a global constant where you set the flight time at the top
  
  %li
    %h6 Speed
  %li Change the speed integer in the function
  %li Create a function for it so things look cleaner (set_speed)
  %li Give it a parameter to pass in

%h4 Ultimate Challenge:
%p
  Using only descriptions of how the above changes worked, ask the programming student to make it so the plane starts off by going the fast speed for 3 seconds, and then go the slow speed for 3 seconds.  


%h4 Ultimate Fun:
%p
  When the student has completed the ultimate challenge by reviewing all the changes to the code we made (and how function calls allow us to call our code easily a second time).  Ask the student if there's anything else worth trying.  


