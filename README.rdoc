== Note
This app is still in early development and as such, this readme consists of features not yet implemented.  

== My Raspberry Pi Development Rails App

This repo is quickly becoming everything I develop or prototype on my Raspberry Pi.  



== Notes on video stream

Security cameras can be laggy, who cares, just so long as the data comes in at the proper rate.  
But if you need to steer around a robot, you need close to real time.

So for quick and dirty (laggy) use 
http://blog.miguelgrinberg.com/post/stream-video-from-the-raspberry-pi-camera-to-web-browsers-even-on-ios-and-android
And
http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi 
But don't DL from sourceforge, that webpage should be hauled away as garbage.  
Instead use this fork https://github.com/TheNotary/mjpg-streamer to compile the mjpeg-streamer from.  

For robotic control, use https://www.youtube.com/watch?v=xmE99sHBgy0 instead because you can't fly with lag!  


== Notes on LCD

At present, I have an adafruit 16x2 LCD + keypad kit.  
That uses an i2c controller rather than other methods that use the pi itself to drive the LCD.  
http://www.adafruit.com/products/1115


== Notes on GIOP States

If you need lots of states (like to detect status of many motion detectors or door bells or what have you) you'll want to expand the number of GIO pins on the board (the things that let you poll state).  
Buy http://www.adafruit.com/product/732
Complete tutorial here https://learn.adafruit.com/mcp230xx-gpio-expander-on-the-raspberry-pi




== Notes on Audio Recording

Record Multiple Mics:
http://www.instructables.com/id/Multi-Mic-Speech-To-Text-with-Python/


http://www.adafruit.com/products/1381

Mic -> Amp -> USB Audio Jack -> Raspberry Pi

It encodes to a Micro SD card... I think GPIOs alternatively.  







== Exposition (old old writing)

Have you ever wanted a rails app responsible for controling other computers and stuff on your lan?  Say, you have a file server with debian linux, but when it's idling it consumes 52 watts, so you need to be able to shut it down and turn it back on?  Well, one of the features of control switch is a "shutdown" button, so you don't need to login to it with ssh to do `sudo shutdown -h now` and then type in your user password to confirm.  Instead you just navigate to the web app and push the shutdown button.  Then use WOL to boot it back up as needed.  

But you could also deploy this app on a low wattage device, and have it be in charge of shutting down and booting up your PCs.  For instance, the Raspberry Pi consumes a mere 3 watts of power.  

Other features include a WOL table for booting up LAN PCs.  You can also use the built-in web proxy for, say, changing the settings on your router without needing to VPN over to your home LAN (or install Hamachi Logmein).   

For Rasberry Pi Users, you can also install media wiki and it's dependencys and get that running on the ultra slim "nginx" web server.  Doesn't that sound snazzy!  

I'd like to build in DNS features so you can name your PCs wiki.com and control.com to make reaching your servers that much easier, even if your router is super lame and doesn't let you configure static IP addresses and stuff like that.  


== Installation



To enable shutdowns, you need to create a user group 'wheel' and allow users in that group to be able to shutdown the PC without prompting for a password.  

    $  sudo visudo
    
    %wheel      ALL: NOPASSORSOMETHING: /sbin/shutdown
    
    $  sudo addgroup wheel
    $  sudo vi /etc/groups
    ...
    wheel:blabla:USER_NAME_RUNNING_RAILS_APP

